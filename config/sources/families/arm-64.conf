BOOTSOURCE='https://github.com/u-boot/u-boot.git'
BOOTBRANCH='tag:v2020.01'
BOOTDIR='u-boot'
UBOOT_USE_GCC='> 7.0'
BOOTSIZE=512
BOOTFS_TYPE=fat
SERIALCON='ttyS2:1500000'

FIXED_IMAGE_SIZE=5000

UBOOT_TARGET_MAP=";;idbloader.bin uboot.img trust.bin"
BOOTDELAY=0
OVERLAY_PREFIX='rockchip'

ATFSOURCE='https://github.com/ayufan-rock64/arm-trusted-firmware'
ATF_TARGET_MAP='M0_CROSS_COMPILE=arm-linux-gnueabi- PLAT=rk3399 DEBUG=1 bl31;;trust.bin'
ATF_TOOLCHAIN2="arm-linux-gnueabi-:> 5.0"
ATFDIR='arm-trusted-firmware-rockchip64'
ATFBRANCH='branch:rockchip'
ATF_USE_GCC='> 6.3'

GOVERNOR="ondemand"
CPUMIN="504000"
CPUMAX="2132000"

ARCH=arm64

SCR_ENV='uEnv.txt'
SCR_BOOT='boot-aml-s912_ENV.cmd'
SCR_BOOT_EMMC='boot-aml-s912_EMMC.cmd'
SCR_BOOT_MAINLINE='boot-arm-64.cmd'
SCR_BOOT_MAINLINE_EMMC='boot-arm-64-EMMC.cmd'
SCR_BOOT_MAINLINE_AW='boot-arm-64-aw.cmd'
SCR_BOOT_MAINLINE_EMMC_AW='boot-arm-64-EMMC-aw.cmd'


case $BRANCH in
	legacy)
	KERNELDIR='linux-aml-dev'
	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux-amlogic.git'
	KERNELBRANCH='branch:integ'
	;;

	current)
	KERNELDIR='linux-current'
	KERNELSOURCE='https://github.com/150balbes/Amlogic_s905-kernel'
	KERNELBRANCH='branch:5.6'
	;;

	dev)
	KERNELDIR='linux-dev'
	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'
	KERNELBRANCH='branch:master'
	WIREGUARD="no"
	EXTRAWIFI="no"
	AUFS="no"
	;;
esac

if [[ $ADD_UBOOT == yes ]]; then
    write_uboot_platform()
    {
	dd if=$1/idbloader.bin of=$2 seek=64 conv=notrunc status=none >/dev/null 2>&1
	dd if=$1/uboot.img of=$2 seek=16384 conv=notrunc status=none >/dev/null 2>&1
	dd if=$1/trust.bin of=$2 seek=24576 conv=notrunc status=none >/dev/null 2>&1
    }

	setup_write_uboot_platform()
	{
		if grep -q "ubootpart" /proc/cmdline; then
			local tmp=$(cat /proc/cmdline)
			tmp="${tmp##*ubootpart=}"
			tmp="${tmp%% *}"
			[[ -n $tmp ]] && local part=$(findfs PARTUUID=$tmp 2>/dev/null)
			[[ -n $part ]] && local dev=$(lsblk -n -o PKNAME $part 2>/dev/null)
			[[ -n $dev ]] && DEVICE="/dev/$dev"
		fi
	}

	uboot_custom_postprocess()
	{
		# bootloader image
		local tempfile=$(mktemp)
		tools/mkimage -n rk3399 -T rksd -d $SRC/cache/sources/rkbin-tools/rk33/rk3399_ddr_800MHz_v1.19.bin idbloader.bin
		cat $SRC/cache/sources/rkbin-tools/rk33/rk3399_miniloader_v1.19.bin >> idbloader.bin
		loaderimage --pack --uboot ./u-boot-dtb.bin uboot.img 0x200000
	}

	atf_custom_postprocess()
	{
		# remove bl31.bin which can be 4+GiB in size and thus may fill the tmpfs mount
		rm -f build/rk3399/debug/bl31.bin
		# ATF
		trust_merger trust.ini
	}
fi

family_tweaks()
{
	# enable root login via the serial console  ttys2 may be deprecated
	echo "ttyS2" >> $SDCARD/etc/securetty
	echo "ttyFIQ0" >> $SDCARD/etc/securetty
	echo 'ttyAML0' >> $SDCARD/etc/securetty
	echo 'DAEMON_ARGS="-w 1024 --data=16"' > $SDCARD/etc/default/haveged

	cp $SRC/packages/bsp/mpv/mpv_mainline.conf $SDCARD/etc/mpv/mpv.conf
	install -m 755 $SRC/$BOARD_DIR/ddbr $SDCARD/usr/bin/

	cp $SRC/$BOARD_DIR/$SCR_ENV $SDCARD/boot/uEnv.txt
	cp $SRC/$BOARD_DIR/boot.ini $SDCARD/boot/boot.ini
	cp $SRC/$BOARD_DIR/boot-emmc.ini $SDCARD/boot/boot-emmc.ini
	cp $SRC/$BOARD_DIR/u-boot.sd $SDCARD/boot/u-boot.sd
	cp $SRC/$BOARD_DIR/u-boot.usb $SDCARD/boot/u-boot.usb

	install -m 755 $SRC/$BOARD_DIR/install-rk3399.sh $SDCARD/root/install-rk3399.sh
	install -m 755 $SRC/$BOARD_DIR/install-rk3399-nanopct4-nvme.sh $SDCARD/root/install-rk3399-nanopct4-nvme.sh
	install -m 755 $SRC/$BOARD_DIR/install-rk3399-rockpi4-nvme.sh $SDCARD/root/install-rk3399-rockpi4-nvme.sh
	install -m 755 $SRC/$BOARD_DIR/install-rk3328.sh $SDCARD/root/install-rk3328.sh
	install -m 755 $SRC/$BOARD_DIR/install-aml.sh $SDCARD/root/install-aml.sh
	install -m 755 $SRC/$BOARD_DIR/install-aml-s905-emmc.sh $SDCARD/root/install-aml-s905-emmc.sh
	install -m 755 $SRC/$BOARD_DIR/install-aw.sh $SDCARD/root/install-aw.sh
	cp $SRC/$BOARD_DIR/fstab $SDCARD/root/fstab

	cp $SRC/config/bootscripts/boot-aml_autoscript.cmd $SDCARD/boot/aml_autoscript.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/aml_autoscript.cmd $SDCARD/boot/aml_autoscript
	touch $SDCARD/boot/aml_autoscript.zip

	cp $SRC/config/bootscripts/$SCR_BOOT $SDCARD/boot/s905_autoscript.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/s905_autoscript.cmd $SDCARD/boot/s905_autoscript

	cp $SRC/config/bootscripts/$SCR_BOOT_EMMC $SDCARD/boot/emmc_autoscript.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/emmc_autoscript.cmd $SDCARD/boot/emmc_autoscript

	cp $SRC/config/bootscripts/$SCR_BOOT_MAINLINE $SDCARD/boot/boot.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/boot.cmd $SDCARD/boot/boot.scr

	cp $SRC/config/bootscripts/$SCR_BOOT_MAINLINE_EMMC $SDCARD/boot/boot-emmc.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/boot-emmc.cmd $SDCARD/boot/boot-emmc.scr

	cp $SRC/config/bootscripts/$SCR_BOOT_MAINLINE_AW $SDCARD/boot/boot.cmd.aw
	mkimage -C none -A arm -T script -d $SDCARD/boot/boot.cmd.aw $SDCARD/boot/boot.scr.aw

	cp $SRC/config/bootscripts/$SCR_BOOT_MAINLINE_EMMC_AW $SDCARD/boot/boot-emmc.cmd.aw
	mkimage -C none -A arm -T script -d $SDCARD/boot/boot-emmc.cmd.aw $SDCARD/boot/boot-emmc.scr.aw

	install -m 755 $SRC/$BOARD_DIR/sound.sh $SDCARD/usr/bin/sound.sh
	cp -R -f $SRC/$BOARD_DIR/cards  $SDCARD/usr/share/alsa/

	mkdir -p $SDCARD/root/u-boot
	cp -R $SRC/$BOARD_DIR/u-boot-rk3399  $SDCARD/root/u-boot/
	cp -R $SRC/$BOARD_DIR/u-boot-rk3328  $SDCARD/root/u-boot/
	cp -R $SRC/$BOARD_DIR/u-boot-aw  $SDCARD/root/u-boot/
	cp -R $SRC/$BOARD_DIR/u-boot-s905  $SDCARD/root/u-boot/

	echo 'Section "ServerFlags"
        Option  "AutoAddGPU" "off"
        Option "Debug" "dmabuf_capable"
EndSection
Section "OutputClass"
        Identifier "Lima"
        MatchDriver "meson"  # sun4i-drm  rockchip
        Driver "modesetting"
        Option "PrimaryGPU" "true"
EndSection' >> $SDCARD/etc/X11/xorg.conf.d/01-armbian-defaults.conf

	mv $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio-nanopi-m4v2.bin $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio.bin
	mv $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio-nanopi-m4v2.txt $SDCARD/lib/firmware/brcm/brcmfmac4356-sdio.txt

}
